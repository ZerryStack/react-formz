import uuid from "react-uuid";
import logger from "../../logger";
import { useFormz, formzStore } from "../../store";
import { FormzValues } from "../../types/form";
import useComponentDidMount from "../utils/useComponentDidMount";
import useLatest from "../utils/useLatest";

/**
 * Creates a unique id for a form and adds that id to the form store.
 * @param name The form name.
 * @param initialValues The initial values for the form.
 * @param existingId An existingId for the form if the id was already generated by another actor.
 */
function useFormId(
  name: string | undefined = undefined,
  initialValues: FormzValues,
  existingId: string | undefined = undefined,
  saveDrafts: boolean = false
) {
  const id = useLatest(name || existingId || uuid());
    
  useComponentDidMount(() => {
    const { addForm, removeForm } = formzStore.getState();

    addForm(id, initialValues, saveDrafts);

    return function useFormIdCleanup() {
      const form = useFormz.getState().forms[id];

      if (form) {
        logger.log(
          `${id}:`,
          `Removing form from the global store.`,
          form.values
        );

        if (!saveDrafts) removeForm(id);
      }
    };
  });

  return id;
}

export default useFormId;
